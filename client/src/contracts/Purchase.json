{
  "contractName": "Purchase",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ValueNotEven",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Aborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ItemReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PurchasedConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SellerRefunded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Purchase.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "total",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "abort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "confirmReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValueNotEven\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Aborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ItemReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PurchasedConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SellerRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Purchase.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"The function cannot be called at the current state\"}],\"OnlyBuyer()\":[{\"notice\":\"Only the buyer can call this function\"}],\"OnlySeller()\":[{\"notice\":\"Only the r seller can call this function\"}],\"ValueNotEven()\":[{\"notice\":\"The provided value has to be even\"}]},\"kind\":\"user\",\"methods\":{\"abort()\":{\"notice\":\"Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked.\"},\"confirmPurchase()\":{\"notice\":\"Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ehter will be locked until confirmReceived is called.\"},\"confirmReceived()\":{\"notice\":\"Confirm that you (they buyer) recieved the item This will release the locked ether\"},\"refundSeller()\":{\"notice\":\"This function refunds the seller, i.e. pays back the locked funds of the seller.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Purchase.sol\":\"Purchase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Purchase.sol\":{\"keccak256\":\"0x5876bf92e1de237d3042829f4a3cb1851fba64b4a08fe1be94c1e3064443ed93\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cf3ae7bcb99475b8250d9a9d55e9bd05a9eaaf91a96adfa084a491be451a0cd2\",\"dweb:/ipfs/QmNVAJUnTPFZUWYP6kBvW5PFLM5PF6jxM5W4XyfV7Ee6fG\"]}},\"version\":1}",
  "bytecode": "0x608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002346100529190610113565b6000819055503460018190555034600054600261006f9190610144565b146100a6576040517fbe3e4c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61019e565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061011e826100ab565b9150610129836100ab565b925082610139576101386100b5565b5b828204905092915050565b600061014f826100ab565b915061015a836100ab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610193576101926100e4565b5b828202905092915050565b610a58806101ad6000396000f3fe6080604052600436106100865760003560e01c80637150d8ae116100595780637150d8ae1461012357806373fac6f01461014e578063c19d93fb14610165578063c7981b1b14610190578063d6960697146101a757610086565b806308551a531461008b5780632ddbd13a146100b657806335a063b4146100e15780633fa4f245146100f8575b600080fd5b34801561009757600080fd5b506100a06101b1565b6040516100ad91906108b8565b60405180910390f35b3480156100c257600080fd5b506100cb6101d7565b6040516100d891906108ec565b60405180910390f35b3480156100ed57600080fd5b506100f66101dd565b005b34801561010457600080fd5b5061010d610394565b60405161011a91906108ec565b60405180910390f35b34801561012f57600080fd5b5061013861039a565b60405161014591906108b8565b60405180910390f35b34801561015a57600080fd5b506101636103c0565b005b34801561017157600080fd5b5061017a61057a565b604051610187919061097e565b60405180910390f35b34801561019c57600080fd5b506101a561058d565b005b6101af610752565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610264576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561027957610278610907565b5b600360149054906101000a900460ff16600381111561029b5761029a610907565b5b146102d2576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a160038060146101000a81548160ff0219169083600381111561032357610322610907565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610390573d6000803e3d6000fd5b5050565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610447576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561045c5761045b610907565b5b600360149054906101000a900460ff16600381111561047e5761047d610907565b5b146104b5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a16002600360146101000a81548160ff0219169083600381111561050757610506610907565b5b0217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610576573d6000803e3d6000fd5b5050565b600360149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610614576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600381111561062957610628610907565b5b600360149054906101000a900460ff16600381111561064b5761064a610907565b5b14610682576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a160038060146101000a81548160ff021916908360038111156106d3576106d2610907565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361072391906109c8565b9081150290604051600060405180830381858888f1935050505015801561074e573d6000803e3d6000fd5b5050565b600080600381111561076757610766610907565b5b600360149054906101000a900460ff16600381111561078957610788610907565b5b146107c0576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026107cf91906109c8565b3414806107db57600080fd5b7f901a66baa1f2b99d5679a29d8eda3fca5305d2b439a1518d37ca6e559476816c60405160405180910390a133600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360146101000a81548160ff0219169083600381111561086e5761086d610907565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a282610877565b9050919050565b6108b281610897565b82525050565b60006020820190506108cd60008301846108a9565b92915050565b6000819050919050565b6108e6816108d3565b82525050565b600060208201905061090160008301846108dd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061094757610946610907565b5b50565b600081905061095882610936565b919050565b60006109688261094a565b9050919050565b6109788161095d565b82525050565b6000602082019050610993600083018461096f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d3826108d3565b91506109de836108d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1757610a16610999565b5b82820290509291505056fea2646970667358221220bd33100de4d20cfc71c7c008a8da73e935afcc903404a6b3d4a1c2261179085f64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80637150d8ae116100595780637150d8ae1461012357806373fac6f01461014e578063c19d93fb14610165578063c7981b1b14610190578063d6960697146101a757610086565b806308551a531461008b5780632ddbd13a146100b657806335a063b4146100e15780633fa4f245146100f8575b600080fd5b34801561009757600080fd5b506100a06101b1565b6040516100ad91906108b8565b60405180910390f35b3480156100c257600080fd5b506100cb6101d7565b6040516100d891906108ec565b60405180910390f35b3480156100ed57600080fd5b506100f66101dd565b005b34801561010457600080fd5b5061010d610394565b60405161011a91906108ec565b60405180910390f35b34801561012f57600080fd5b5061013861039a565b60405161014591906108b8565b60405180910390f35b34801561015a57600080fd5b506101636103c0565b005b34801561017157600080fd5b5061017a61057a565b604051610187919061097e565b60405180910390f35b34801561019c57600080fd5b506101a561058d565b005b6101af610752565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610264576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561027957610278610907565b5b600360149054906101000a900460ff16600381111561029b5761029a610907565b5b146102d2576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a160038060146101000a81548160ff0219169083600381111561032357610322610907565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610390573d6000803e3d6000fd5b5050565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610447576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600381111561045c5761045b610907565b5b600360149054906101000a900460ff16600381111561047e5761047d610907565b5b146104b5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a16002600360146101000a81548160ff0219169083600381111561050757610506610907565b5b0217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610576573d6000803e3d6000fd5b5050565b600360149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610614576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600381111561062957610628610907565b5b600360149054906101000a900460ff16600381111561064b5761064a610907565b5b14610682576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a160038060146101000a81548160ff021916908360038111156106d3576106d2610907565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361072391906109c8565b9081150290604051600060405180830381858888f1935050505015801561074e573d6000803e3d6000fd5b5050565b600080600381111561076757610766610907565b5b600360149054906101000a900460ff16600381111561078957610788610907565b5b146107c0576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026107cf91906109c8565b3414806107db57600080fd5b7f901a66baa1f2b99d5679a29d8eda3fca5305d2b439a1518d37ca6e559476816c60405160405180910390a133600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360146101000a81548160ff0219169083600381111561086e5761086d610907565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a282610877565b9050919050565b6108b281610897565b82525050565b60006020820190506108cd60008301846108a9565b92915050565b6000819050919050565b6108e6816108d3565b82525050565b600060208201905061090160008301846108dd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061094757610946610907565b5b50565b600081905061095882610936565b919050565b60006109688261094a565b9050919050565b6109788161095d565b82525050565b6000602082019050610993600083018461096f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d3826108d3565b91506109de836108d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1757610a16610999565b5b82820290509291505056fea2646970667358221220bd33100de4d20cfc71c7c008a8da73e935afcc903404a6b3d4a1c2261179085f64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1004:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:1",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:1"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "304:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "314:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "314:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "276:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "504:143:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "514:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "537:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "519:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "514:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "571:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "553:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "548:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "597:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:1"
                  },
                  "nodeType": "YulIf",
                  "src": "582:35:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "627:14:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "636:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "639:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "627:1:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "493:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "496:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "502:1:1",
                "type": ""
              }
            ],
            "src": "462:185:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "701:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "711:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "734:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "716:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "711:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "768:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "750:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "745:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "943:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "945:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "945:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "945:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "855:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "848:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "841:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "863:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "870:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "938:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "866:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "866:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "860:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "837:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "834:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "975:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "990:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "993:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "684:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "687:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "693:7:1",
                "type": ""
              }
            ],
            "src": "653:348:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2589:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:1",
                "type": ""
              }
            ],
            "src": "139:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:1",
                "type": ""
              }
            ],
            "src": "249:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:1",
                "type": ""
              }
            ],
            "src": "397:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "702:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "712:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "723:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "712:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "694:7:1",
                "type": ""
              }
            ],
            "src": "657:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "822:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "845:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "827:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "793:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "800:3:1",
                "type": ""
              }
            ],
            "src": "740:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "962:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "972:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "972:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1008:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1008:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "957:4:1",
                "type": ""
              }
            ],
            "src": "864:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1120:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1130:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1234:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1227:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1227:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1258:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1261:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1092:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1363:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1365:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1365:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1365:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1352:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:1:1",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1349:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1339:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1322:5:1",
                "type": ""
              }
            ],
            "src": "1278:113:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1450:74:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1460:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1471:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1460:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1512:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$14",
                      "nodeType": "YulIdentifier",
                      "src": "1477:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:41:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1432:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1442:7:1",
                "type": ""
              }
            ],
            "src": "1397:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1596:61:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1606:45:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1645:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$14",
                      "nodeType": "YulIdentifier",
                      "src": "1619:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:32:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1606:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$14_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1586:9:1",
                "type": ""
              }
            ],
            "src": "1530:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:72:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1751:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1793:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$14_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1756:36:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:56:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$14_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1722:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1729:3:1",
                "type": ""
              }
            ],
            "src": "1663:143:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1916:130:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1926:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1938:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1949:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1934:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1926:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2012:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2036:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$14_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1962:49:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:77:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1962:77:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$14__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1888:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1900:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1911:4:1",
                "type": ""
              }
            ],
            "src": "1812:234:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2100:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2187:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2187:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2221:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2211:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2211:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2211:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2052:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2296:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2319:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2301:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2296:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2353:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2335:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2330:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2528:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2530:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2530:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2530:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2440:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2433:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2433:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2426:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2448:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2455:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2523:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2451:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2451:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2445:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2422:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2419:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2560:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2575:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2578:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2571:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2560:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2269:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2272:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2278:7:1",
                "type": ""
              }
            ],
            "src": "2238:348:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$14(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$14(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$14(value)\n    }\n\n    function convert_t_enum$_State_$14_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$14(value)\n    }\n\n    function abi_encode_t_enum$_State_$14_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$14_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$14__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$14_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:3357:0:-:0;;;1413:10;1396:6;;:28;;;;;;;;;;;;;;;;;;1454:1;1442:9;:13;;;;:::i;:::-;1434:5;:21;;;;1473:9;1465:5;:17;;;;1511:9;1501:5;;1497:1;:9;;;;:::i;:::-;1496:24;1492:63;;1541:14;;;;;;;;;;;;;;1492:63;61:3357;;7:77:1;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:180;324:77;321:1;314:88;421:4;418:1;411:15;445:4;442:1;435:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;653:348::-;693:7;716:20;734:1;716:20;:::i;:::-;711:25;;750:20;768:1;750:20;:::i;:::-;745:25;;938:1;870:66;866:74;863:1;860:81;855:1;848:9;841:17;837:105;834:131;;;945:18;;:::i;:::-;834:131;993:1;990;986:9;975:20;;653:348;;;;:::o;61:3357:0:-;;;;;;;",
  "deployedSourceMap": "61:3357:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;108:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1698:375;;;;;;;;;;;;;:::i;:::-;;85:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;166:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2599:353;;;;;;;;;;;;;:::i;:::-;;338:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3055:361;;;;;;;;;;;;;:::i;:::-;;2246:248;;;:::i;:::-;;131:29;;;;;;;;;;;;;:::o;108:17::-;;;;:::o;1698:375::-;908:6;;;;;;;;;;;894:20;;:10;:20;;;890:57;;935:12;;;;;;;;;;;;;;890:57;1767:13:::1;1025:6;1016:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1012:54;;1052:14;;;;;;;;;;;;;;1012:54;1801:9:::2;;;;;;;;;;1828:14;1820:5:::0;::::2;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2028:6;;;;;;;;;;;:15;;:38;2044:21;2028:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;957:1:::1;1698:375::o:0;85:17::-;;;;:::o;166:28::-;;;;;;;;;;;;;:::o;2599:353::-;797:5;;;;;;;;;;;783:19;;:10;:19;;;779:55;;823:11;;;;;;;;;;;;;;779:55;2677:12:::1;1025:6;1016:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1012:54;;1052:14;;;;;;;;;;;;;;1012:54;2710:14:::2;;;;;;;;;;2900:13;2892:5;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2924:5;;;;;;;;;;;:14;;:21;2939:5;;2924:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;844:1:::1;2599:353::o:0;338:18::-;;;;;;;;;;;;;:::o;3055:361::-;908:6;;;;;;;;;;;894:20;;:10;:20;;;890:57;;935:12;;;;;;;;;;;;;;890:57;3131:13:::1;1025:6;1016:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1012:54;;1052:14;;;;;;;;;;;;;;1012:54;3165:16:::2;;;;;;;;;;3359:14;3351:5:::0;::::2;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3383:6;;;;;;;;;;;:15;;:26;3403:5;;3399:1;:9;;;;:::i;:::-;3383:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;957:1:::1;3055:361::o:0;2246:248::-;2306:13;1025:6;1016:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1012:54;;1052:14;;;;;;;;;;;;;;1012:54;2357:5:::1;;2353:1;:9;;;;:::i;:::-;2339;:24;417:10;409:19;;;::::0;::::1;;2400:20:::2;;;;;;;;;;2446:10;2430:5;;:27;;;;;;;;;;;;;;;;;;2475:12;2467:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1076:1:::1;2246:248:::0;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:77::-;694:7;723:5;712:16;;657:77;;;:::o;740:118::-;827:24;845:5;827:24;:::i;:::-;822:3;815:37;740:118;;:::o;864:222::-;957:4;995:2;984:9;980:18;972:26;;1008:71;1076:1;1065:9;1061:17;1052:6;1008:71;:::i;:::-;864:222;;;;:::o;1092:180::-;1140:77;1137:1;1130:88;1237:4;1234:1;1227:15;1261:4;1258:1;1251:15;1278:113;1359:1;1352:5;1349:12;1339:46;;1365:18;;:::i;:::-;1339:46;1278:113;:::o;1397:127::-;1442:7;1471:5;1460:16;;1477:41;1512:5;1477:41;:::i;:::-;1397:127;;;:::o;1530:::-;1586:9;1619:32;1645:5;1619:32;:::i;:::-;1606:45;;1530:127;;;:::o;1663:143::-;1756:43;1793:5;1756:43;:::i;:::-;1751:3;1744:56;1663:143;;:::o;1812:234::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1962:77;2036:1;2025:9;2021:17;2012:6;1962:77;:::i;:::-;1812:234;;;;:::o;2052:180::-;2100:77;2097:1;2090:88;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2238:348;2278:7;2301:20;2319:1;2301:20;:::i;:::-;2296:25;;2335:20;2353:1;2335:20;:::i;:::-;2330:25;;2523:1;2455:66;2451:74;2448:1;2445:81;2440:1;2433:9;2426:17;2422:105;2419:131;;;2530:18;;:::i;:::-;2419:131;2578:1;2575;2571:9;2560:20;;2238:348;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.4;\n\ncontract Purchase {\n    uint public value;\n    uint public total;\n    address payable public seller;\n    address payable public buyer;\n\n    enum State { Created, Locked, Release, Inactive }\n    // The state variable has a default value of the first member, `State.created`\n    State public state;\n\n    modifier condition(bool condition_) {\n        require(condition_);\n        _;\n    }\n\n    /// Only the buyer can call this function\n    error OnlyBuyer();\n    /// Only the r seller can call this function\n    error OnlySeller();\n    /// The function cannot be called at the current state\n    error InvalidState();\n    /// The provided value has to be even\n    error ValueNotEven();\n\n    modifier onlyBuyer() {\n        if (msg.sender != buyer)\n            revert OnlyBuyer();\n        _;\n    }\n\n    modifier onlySeller() {\n        if (msg.sender != seller)\n            revert OnlySeller();\n        _;\n    }\n\n    modifier inState(State state_) {\n        if (state != state_)\n            revert InvalidState();\n        _;\n    }\n\n    event Aborted();\n    event PurchasedConfirmed();\n    event ItemReceived();\n    event SellerRefunded();\n\n    // Ensure that `msg.value` is an even number.\n    // Division will truncate if it is an odd number.\n    // Check via multiplication that it wasn't an odd number.\n    constructor() payable {\n        seller = payable(msg.sender);\n        value = msg.value / 2;\n        total = msg.value;\n        if ((2 * value) != msg.value)\n            revert ValueNotEven();\n    }\n\n    /// Abort the purchase and reclaim the ether.\n    /// Can only be called by the seller before\n    /// the contract is locked.\n    function abort()\n        external\n        onlySeller\n        inState(State.Created)\n    {\n        emit Aborted();\n        state = State.Inactive;\n        // We use transfer here directly. It is\n        // reentrancy-sage, because it is the\n        // last call in this function and we\n        // already changed the state\n        seller.transfer(address(this).balance);\n    }\n\n    /// Confirm the purchase as buyer.\n    /// Transaction has to include `2 * value` ether.\n    /// The ehter will be locked until confirmReceived\n    /// is called.\n    function confirmPurchase()\n        external\n        inState(State.Created)\n        condition(msg.value == (2 * value))\n        payable\n    {\n        emit PurchasedConfirmed();\n        buyer = payable(msg.sender);\n        state = State.Locked;\n    }\n\n    /// Confirm that you (they buyer) recieved the item\n    /// This will release the locked ether\n    function confirmReceived()\n        external\n        onlyBuyer\n        inState(State.Locked)\n    {\n        emit ItemReceived();\n        // It is important to change the state first because\n        // otherwise, the contracts called using `send` below\n        // can call in again here.\n        state = State.Release;\n\n        buyer.transfer(value);\n    }\n\n    /// This function refunds the seller, i.e.\n    /// pays back the locked funds of the seller.\n    function refundSeller()\n        external\n        onlySeller\n        inState(State.Release)\n    {\n        emit SellerRefunded();\n        // It is important to change the state first because \n        // otherwise, the contracts called using `send` below \n        // can call in again here.\n        state = State.Inactive;\n        seller.transfer(3 * value);\n    }\n}",
  "sourcePath": "/Users/matthewcroft/Web3Workspace/SolidityDocumentation/contracts/Purchase.sol",
  "ast": {
    "absolutePath": "project:/contracts/Purchase.sol",
    "exportedSymbols": {
      "Purchase": [
        236
      ]
    },
    "id": 237,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Purchase",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 236,
        "linearizedBaseContracts": [
          236
        ],
        "name": "Purchase",
        "nameLocation": "70:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "97:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "85:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "85:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ddbd13a",
            "id": 5,
            "mutability": "mutable",
            "name": "total",
            "nameLocation": "120:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "108:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "108:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 7,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "154:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "131:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 9,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "189:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "166:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Purchase.State",
            "id": 14,
            "members": [
              {
                "id": 10,
                "name": "Created",
                "nameLocation": "214:7:0",
                "nodeType": "EnumValue",
                "src": "214:7:0"
              },
              {
                "id": 11,
                "name": "Locked",
                "nameLocation": "223:6:0",
                "nodeType": "EnumValue",
                "src": "223:6:0"
              },
              {
                "id": 12,
                "name": "Release",
                "nameLocation": "231:7:0",
                "nodeType": "EnumValue",
                "src": "231:7:0"
              },
              {
                "id": 13,
                "name": "Inactive",
                "nameLocation": "240:8:0",
                "nodeType": "EnumValue",
                "src": "240:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "206:5:0",
            "nodeType": "EnumDefinition",
            "src": "201:49:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 17,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "351:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "338:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$14",
              "typeString": "enum Purchase.State"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14,
                "src": "338:5:0"
              },
              "referencedDeclaration": 14,
              "src": "338:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$14",
                "typeString": "enum Purchase.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "399:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "409:19:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "438:1:0"
                }
              ]
            },
            "id": 27,
            "name": "condition",
            "nameLocation": "372:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "387:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "382:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:17:0"
            },
            "src": "363:83:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "452:41:0",
              "text": "Only the buyer can call this function"
            },
            "id": 30,
            "name": "OnlyBuyer",
            "nameLocation": "504:9:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:0"
            },
            "src": "498:18:0"
          },
          {
            "documentation": {
              "id": 31,
              "nodeType": "StructuredDocumentation",
              "src": "521:44:0",
              "text": "Only the r seller can call this function"
            },
            "id": 33,
            "name": "OnlySeller",
            "nameLocation": "576:10:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:0"
            },
            "src": "570:19:0"
          },
          {
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "594:54:0",
              "text": "The function cannot be called at the current state"
            },
            "id": 36,
            "name": "InvalidState",
            "nameLocation": "659:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:0"
            },
            "src": "653:21:0"
          },
          {
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "679:37:0",
              "text": "The provided value has to be even"
            },
            "id": 39,
            "name": "ValueNotEven",
            "nameLocation": "727:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:0"
            },
            "src": "721:21:0"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "769:83:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "783:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "783:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 43,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "797:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "783:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48,
                  "nodeType": "IfStatement",
                  "src": "779:55:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "823:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "823:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47,
                    "nodeType": "RevertStatement",
                    "src": "816:18:0"
                  }
                },
                {
                  "id": 49,
                  "nodeType": "PlaceholderStatement",
                  "src": "844:1:0"
                }
              ]
            },
            "id": 51,
            "name": "onlyBuyer",
            "nameLocation": "757:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:2:0"
            },
            "src": "748:104:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "880:85:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 53,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "894:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "894:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 55,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "908:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "894:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "890:57:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 57,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "935:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "935:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59,
                    "nodeType": "RevertStatement",
                    "src": "928:19:0"
                  }
                },
                {
                  "id": 61,
                  "nodeType": "PlaceholderStatement",
                  "src": "957:1:0"
                }
              ]
            },
            "id": 63,
            "name": "onlySeller",
            "nameLocation": "867:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:2:0"
            },
            "src": "858:107:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1002:82:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1016:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 69,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1025:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1016:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74,
                  "nodeType": "IfStatement",
                  "src": "1012:54:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 71,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1052:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1052:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 73,
                    "nodeType": "RevertStatement",
                    "src": "1045:21:0"
                  }
                },
                {
                  "id": 75,
                  "nodeType": "PlaceholderStatement",
                  "src": "1076:1:0"
                }
              ]
            },
            "id": 77,
            "name": "inState",
            "nameLocation": "980:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "994:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "988:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$14",
                    "typeString": "enum Purchase.State"
                  },
                  "typeName": {
                    "id": 65,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "988:5:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:14:0"
            },
            "src": "971:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "Aborted",
            "nameLocation": "1096:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:0"
            },
            "src": "1090:16:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "PurchasedConfirmed",
            "nameLocation": "1117:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:2:0"
            },
            "src": "1111:27:0"
          },
          {
            "anonymous": false,
            "id": 83,
            "name": "ItemReceived",
            "nameLocation": "1149:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:0"
            },
            "src": "1143:21:0"
          },
          {
            "anonymous": false,
            "id": 85,
            "name": "SellerRefunded",
            "nameLocation": "1175:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:0"
            },
            "src": "1169:23:0"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1386:176:0",
              "statements": [
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1396:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1413:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1413:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1405:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1405:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1396:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:28:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1434:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 97,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1442:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1442:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1442:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:21:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1473:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1473:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1497:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 109,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1501:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 111,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1496:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 112,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1511:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1511:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1496:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1492:63:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 115,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1541:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1541:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 117,
                    "nodeType": "RevertStatement",
                    "src": "1534:21:0"
                  }
                }
              ]
            },
            "id": 120,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:2:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:0"
            },
            "scope": 236,
            "src": "1364:198:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1786:287:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 130,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "1796:14:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 134,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1828:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1828:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1820:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 143,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2052:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Purchase_$236",
                                "typeString": "contract Purchase"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Purchase_$236",
                                "typeString": "contract Purchase"
                              }
                            ],
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2044:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 141,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2044:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2044:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2044:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2028:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2028:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:38:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1568:125:0",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 123,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "1740:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1740:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 126,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1767:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "1767:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "1759:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1759:22:0"
              }
            ],
            "name": "abort",
            "nameLocation": "1707:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:2:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:0"
            },
            "scope": 236,
            "src": "1698:375:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2385:109:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 166,
                      "name": "PurchasedConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2400:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "2395:25:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2430:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 172,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2446:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2446:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2438:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2438:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2438:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2430:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:27:0"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 177,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2467:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 178,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2475:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2475:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2467:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:20:0"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "2079:162:0",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ehter will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 153,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2306:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "2306:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "2298:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2298:22:0"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2339:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2339:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2353:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 160,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "2357:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2353:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2352:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2339:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 156,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "2329:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2329:35:0"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2255:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2385:0:0"
            },
            "scope": 236,
            "src": "2246:248:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2695:257:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 193,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2710:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "EmitStatement",
                  "src": "2705:19:0"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2892:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 197,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2900:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2900:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2892:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2939:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 201,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2924:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:21:0"
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "2500:94:0",
              "text": "Confirm that you (they buyer) recieved the item\n This will release the locked ether"
            },
            "functionSelector": "73fac6f0",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2651:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2651:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 189,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2677:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "2677:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "2669:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2669:21:0"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2608:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2623:2:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:0"
            },
            "scope": 236,
            "src": "2599:353:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3150:266:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 218,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "3165:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "EmitStatement",
                  "src": "3160:21:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 221,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3351:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 222,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3359:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3359:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "3351:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3399:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 230,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3403:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3399:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 226,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3383:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:26:0"
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "2958:92:0",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "3104:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3104:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 214,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3131:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "3131:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 213,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "3123:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:22:0"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "3064:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3076:2:0"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:0:0"
            },
            "scope": 236,
            "src": "3055:361:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 237,
        "src": "61:3357:0",
        "usedErrors": [
          30,
          33,
          36,
          39
        ]
      }
    ],
    "src": "36:3382:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Purchase.sol",
    "exportedSymbols": {
      "Purchase": [
        236
      ]
    },
    "id": 237,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Purchase",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 236,
        "linearizedBaseContracts": [
          236
        ],
        "name": "Purchase",
        "nameLocation": "70:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "97:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "85:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "85:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ddbd13a",
            "id": 5,
            "mutability": "mutable",
            "name": "total",
            "nameLocation": "120:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "108:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "108:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 7,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "154:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "131:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 9,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "189:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "166:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Purchase.State",
            "id": 14,
            "members": [
              {
                "id": 10,
                "name": "Created",
                "nameLocation": "214:7:0",
                "nodeType": "EnumValue",
                "src": "214:7:0"
              },
              {
                "id": 11,
                "name": "Locked",
                "nameLocation": "223:6:0",
                "nodeType": "EnumValue",
                "src": "223:6:0"
              },
              {
                "id": 12,
                "name": "Release",
                "nameLocation": "231:7:0",
                "nodeType": "EnumValue",
                "src": "231:7:0"
              },
              {
                "id": 13,
                "name": "Inactive",
                "nameLocation": "240:8:0",
                "nodeType": "EnumValue",
                "src": "240:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "206:5:0",
            "nodeType": "EnumDefinition",
            "src": "201:49:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 17,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "351:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "338:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$14",
              "typeString": "enum Purchase.State"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14,
                "src": "338:5:0"
              },
              "referencedDeclaration": 14,
              "src": "338:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$14",
                "typeString": "enum Purchase.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "399:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "409:19:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "438:1:0"
                }
              ]
            },
            "id": 27,
            "name": "condition",
            "nameLocation": "372:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "387:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "382:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:17:0"
            },
            "src": "363:83:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "452:41:0",
              "text": "Only the buyer can call this function"
            },
            "id": 30,
            "name": "OnlyBuyer",
            "nameLocation": "504:9:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:0"
            },
            "src": "498:18:0"
          },
          {
            "documentation": {
              "id": 31,
              "nodeType": "StructuredDocumentation",
              "src": "521:44:0",
              "text": "Only the r seller can call this function"
            },
            "id": 33,
            "name": "OnlySeller",
            "nameLocation": "576:10:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:0"
            },
            "src": "570:19:0"
          },
          {
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "594:54:0",
              "text": "The function cannot be called at the current state"
            },
            "id": 36,
            "name": "InvalidState",
            "nameLocation": "659:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:0"
            },
            "src": "653:21:0"
          },
          {
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "679:37:0",
              "text": "The provided value has to be even"
            },
            "id": 39,
            "name": "ValueNotEven",
            "nameLocation": "727:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:0"
            },
            "src": "721:21:0"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "769:83:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "783:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "783:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 43,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "797:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "783:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48,
                  "nodeType": "IfStatement",
                  "src": "779:55:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "823:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "823:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47,
                    "nodeType": "RevertStatement",
                    "src": "816:18:0"
                  }
                },
                {
                  "id": 49,
                  "nodeType": "PlaceholderStatement",
                  "src": "844:1:0"
                }
              ]
            },
            "id": 51,
            "name": "onlyBuyer",
            "nameLocation": "757:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:2:0"
            },
            "src": "748:104:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "880:85:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 53,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "894:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "894:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 55,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "908:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "894:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "IfStatement",
                  "src": "890:57:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 57,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "935:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "935:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59,
                    "nodeType": "RevertStatement",
                    "src": "928:19:0"
                  }
                },
                {
                  "id": 61,
                  "nodeType": "PlaceholderStatement",
                  "src": "957:1:0"
                }
              ]
            },
            "id": 63,
            "name": "onlySeller",
            "nameLocation": "867:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:2:0"
            },
            "src": "858:107:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1002:82:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1016:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 69,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1025:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1016:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74,
                  "nodeType": "IfStatement",
                  "src": "1012:54:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 71,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1052:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1052:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 73,
                    "nodeType": "RevertStatement",
                    "src": "1045:21:0"
                  }
                },
                {
                  "id": 75,
                  "nodeType": "PlaceholderStatement",
                  "src": "1076:1:0"
                }
              ]
            },
            "id": 77,
            "name": "inState",
            "nameLocation": "980:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "994:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "988:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$14",
                    "typeString": "enum Purchase.State"
                  },
                  "typeName": {
                    "id": 65,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "988:5:0"
                    },
                    "referencedDeclaration": 14,
                    "src": "988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:14:0"
            },
            "src": "971:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "Aborted",
            "nameLocation": "1096:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:0"
            },
            "src": "1090:16:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "PurchasedConfirmed",
            "nameLocation": "1117:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:2:0"
            },
            "src": "1111:27:0"
          },
          {
            "anonymous": false,
            "id": 83,
            "name": "ItemReceived",
            "nameLocation": "1149:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:0"
            },
            "src": "1143:21:0"
          },
          {
            "anonymous": false,
            "id": 85,
            "name": "SellerRefunded",
            "nameLocation": "1175:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:0"
            },
            "src": "1169:23:0"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1386:176:0",
              "statements": [
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1396:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1413:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1413:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1405:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1405:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1396:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:28:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1434:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 97,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1442:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1442:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1442:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:21:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1473:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1473:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1497:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 109,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1501:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 111,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1496:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 112,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1511:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1511:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1496:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1492:63:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 115,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1541:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1541:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 117,
                    "nodeType": "RevertStatement",
                    "src": "1534:21:0"
                  }
                }
              ]
            },
            "id": 120,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:2:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:0"
            },
            "scope": 236,
            "src": "1364:198:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1786:287:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 130,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "1796:14:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 134,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1828:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1828:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1820:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 143,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2052:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Purchase_$236",
                                "typeString": "contract Purchase"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Purchase_$236",
                                "typeString": "contract Purchase"
                              }
                            ],
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2044:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 141,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2044:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2044:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2044:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2028:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2028:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:38:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1568:125:0",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 123,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "1740:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1740:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 126,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1767:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "1767:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "1759:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1759:22:0"
              }
            ],
            "name": "abort",
            "nameLocation": "1707:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:2:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:0"
            },
            "scope": 236,
            "src": "1698:375:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2385:109:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 166,
                      "name": "PurchasedConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2400:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "2395:25:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2430:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 172,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2446:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2446:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2438:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2438:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2438:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2430:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:27:0"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 177,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2467:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 178,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2475:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2475:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2467:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:20:0"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "2079:162:0",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ehter will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 153,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2306:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "2306:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "2298:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2298:22:0"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2339:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2339:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2353:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 160,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "2357:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2353:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2352:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2339:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 156,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "2329:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2329:35:0"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2255:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2385:0:0"
            },
            "scope": 236,
            "src": "2246:248:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2695:257:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 193,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2710:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "EmitStatement",
                  "src": "2705:19:0"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2892:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 197,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2900:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2900:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2892:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2939:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 201,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2924:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:21:0"
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "2500:94:0",
              "text": "Confirm that you (they buyer) recieved the item\n This will release the locked ether"
            },
            "functionSelector": "73fac6f0",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2651:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2651:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 189,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2677:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "2677:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "2669:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2669:21:0"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2608:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2623:2:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:0"
            },
            "scope": 236,
            "src": "2599:353:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3150:266:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 218,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "3165:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "EmitStatement",
                  "src": "3160:21:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 221,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3351:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 222,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3359:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3359:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$14",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "3351:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3399:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 230,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3403:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3399:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 226,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3383:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:26:0"
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "2958:92:0",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "3104:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3104:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 214,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3131:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$14_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "3131:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$14",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 213,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "3123:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:22:0"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "3064:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3076:2:0"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:0:0"
            },
            "scope": 236,
            "src": "3055:361:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 237,
        "src": "61:3357:0",
        "usedErrors": [
          30,
          33,
          36,
          39
        ]
      }
    ],
    "src": "36:3382:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2DE10449c01bdaaa1136f321F916C011ffc306CE",
      "transactionHash": "0x8e31eee056b44f29c326207bdb1ff0c957a9a79312b20b9353f029578599fbd4"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-18T18:04:48.084Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "The function cannot be called at the current state"
        }
      ],
      "OnlyBuyer()": [
        {
          "notice": "Only the buyer can call this function"
        }
      ],
      "OnlySeller()": [
        {
          "notice": "Only the r seller can call this function"
        }
      ],
      "ValueNotEven()": [
        {
          "notice": "The provided value has to be even"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "abort()": {
        "notice": "Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked."
      },
      "confirmPurchase()": {
        "notice": "Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ehter will be locked until confirmReceived is called."
      },
      "confirmReceived()": {
        "notice": "Confirm that you (they buyer) recieved the item This will release the locked ether"
      },
      "refundSeller()": {
        "notice": "This function refunds the seller, i.e. pays back the locked funds of the seller."
      }
    },
    "version": 1
  }
}